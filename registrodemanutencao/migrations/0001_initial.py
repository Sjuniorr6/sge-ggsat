# Generated by Django 5.1.1 on 2024-10-02 12:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acompanhamento', '0001_initial'),
        ('produto', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='registrodemanutencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_entrada', models.CharField(blank=True, choices=[('Manutenção', 'Manutenção'), ('Devolução/Estoque', 'Devolução/Estoque')], max_length=50, null=True)),
                ('motivo', models.CharField(blank=True, choices=[('', ''), ('Manutenção', 'Manutenção'), ('Devolução/Estoque', 'Devolução/Estoque')], max_length=50, null=True)),
                ('tipo_customizacao', models.CharField(blank=True, choices=[('', ''), ('Sem customização', 'Sem customização'), ('Caixa de papelão', 'Caixa de papelão'), ('Caixa de papelão (bateria desacoplada)', 'Caixa de papelão (bateria desacoplada)')], max_length=50, null=True)),
                ('recebimento', models.CharField(blank=True, choices=[('Correios/Transportadora', 'Correios/Transportadora'), ('Entrega na base', 'Entrega na base')], max_length=50, null=True)),
                ('entregue_por_retirado_por', models.CharField(choices=[('Correios/Transportadora', 'Correios/Transportadora'), ('Entrega na base', 'Entrega na base')], default='', max_length=50)),
                ('id_equipamentos', models.TextField(blank=True, default='', max_length=1200)),
                ('quantidade', models.TextField(blank=True, default='', max_length=50)),
                ('faturamento', models.CharField(blank=True, choices=[('', ''), ('Com_Custo', 'Com Custo'), ('Sem_Custo', 'Sem Custo')], max_length=50, null=True)),
                ('setor', models.CharField(blank=True, choices=[('Entrada', 'Entrada'), ('Manutenção', 'Manutenção'), ('configuração', 'configuração')], max_length=50, null=True)),
                ('customizacaoo', models.CharField(blank=True, choices=[('Sem custumização', 'Sem custumização'), ('Caixa de papelão', 'Caixa de papelão'), ('Caixa de papelão (bateria desacoplada)', 'Caixa de papelão (bateria desacoplada)'), ('Caixa de papelão + DF', 'Caixa de papelão + DF'), ('Termo branco', 'Termo branco'), ('Termo branco + D.F ', 'Termo branco + D.F'), ('Termo branco slim ', 'Termo branco slim'), ('Termo branco slim + D.F +EQT  ', 'Termo branco slim + D.F +EQT'), ('Termo cinza slim + D.F +EQT  ', 'Termo cinza slim + D.F +EQT'), ('Termo branco  (isopor) ', 'Termo branco  (isopor)'), ('Termo branco - bateria externa ', 'Termo branco - bateria externa'), ('Termo marrom + imã', 'Termo marrom + imã'), ('Termo cinza', 'Termo cinza'), ('Termo cinza + imã', 'Termo cinza + imã'), ('Termo preto', 'Termo preto'), ('Termo preto + imã', 'Termo preto + imã'), ('Termo brabco |marrim-slim', 'Termo brabco |marrim-slim'), ('Termo marrom slim +D.F + EQT', 'Termo marrom slim +D.F + EQT'), ('Termo marrom', 'Termo marrom'), ('Caixa blindada', 'Caixa blindada'), ('Tênis/ Sapato', 'Tênis/ Sapato'), ('Projetor', 'Projetor'), ('Caixa de som', 'Caixa de som'), ('Luminaria', 'Luminaria'), ('Alexa', 'Alexa'), ('Video Game', 'Video Game'), ('Secador de cabelo', 'Secador de cabelo'), ('Roteador', 'Roteador'), ('Relogio digital', 'Relogio digital')], default='', max_length=250)),
                ('numero_equipamento', models.TextField(blank=True, default='', max_length=2500)),
                ('observacoes', models.TextField(blank=True, default='', max_length=250)),
                ('tratativa', models.CharField(blank=True, choices=[('Oxidação', 'Oxidação'), ('Placa Danificada', 'Placa Danificada'), ('USB Danificado', 'USB Danificado'), ('Botão de acionamento Danificado', 'Botão de acionamento Danificado'), ('Antena LoRa Danificada', 'Antena LoRa Danificada'), ('USB Sem problemas Identificados', 'USB Sem problemas Identificados')], max_length=50, null=True)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='imagens/')),
                ('status', models.CharField(blank=True, default='Pendente', max_length=50, null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True, null=True)),
                ('nome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulario_nome', to='acompanhamento.clientes')),
                ('tipo_produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulario_produto', to='produto.produto')),
            ],
        ),
        migrations.CreateModel(
            name='ImagemRegistro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_problema', models.CharField(blank=True, choices=[('Oxidação', 'Oxidação'), ('Placa Danificada', 'Placa Danificada'), ('Placa danificada SEM CUSTO', 'Placa danificada SEM CUSTO'), ('USB Danificado', 'USB Danificado'), ('USB Danificado SEM CUSTO', 'USB Danificado SEM CUSTO'), ('Botão de acionamento Danificado', 'Botão de acionamento Danificado'), ('Botão de acionamento Danificado SEM CUSTO', 'Botão de acionamento Danificado SEM CUSTO'), ('Antena LoRa Danificada', 'Antena LoRa Danificada'), ('Sem problemas Identificados', 'Sem problemas Identificados')], max_length=50, null=True)),
                ('imagem', models.ImageField(upload_to='imagens_registros/')),
                ('id_equipamento', models.CharField(blank=True, max_length=255)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagens', to='registrodemanutencao.registrodemanutencao')),
            ],
        ),
        migrations.CreateModel(
            name='retorno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_problema', models.CharField(choices=[('Oxidação', 'Oxidação'), ('Placa Danificada', 'Placa Danificada'), ('Placa danificada SEM CUSTO', 'Placa danificada SEM CUSTO'), ('USB Danificado', 'USB Danificado'), ('USB Danificado SEM CUSTO', 'USB Danificado SEM CUSTO'), ('Botão de acionamento Danificado', 'Botão de acionamento Danificado'), ('Botão de acionamento Danificado SEM CUSTO', 'Botão de acionamento Danificado SEM CUSTO'), ('Antena LoRa Danificada', 'Antena LoRa Danificada'), ('Sem problemas Identificados', 'Sem problemas Identificados')], max_length=100)),
                ('imagem', models.ImageField(upload_to='imagens/')),
                ('id_equipamentos', models.TextField(blank=True, default='', max_length=1000)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to='acompanhamento.clientes')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtos', to='produto.produto')),
            ],
        ),
    ]
